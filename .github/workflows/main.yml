# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Main CI
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: Version to release

concurrency:
  group: ${{ inputs.version != '' && 'release' || 'ci' }}

run-name: ${{ inputs.version != '' && format('Release {0}', inputs.version) || github.event.head_commit.message }}

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 8
        run_install: true
    - run: npm run build
    - name: Install Vercel CLI
      if: ${{ inputs.version == '' }}
      run: npm install --global vercel@latest
    - name: Pull Vercel Preview Environment Information
      if: ${{ inputs.version == '' }}
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - name: Build Project Artifacts
      if: ${{ inputs.version == '' }}
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
    - name: Deploy Project Artifacts to Vercel in Preview
      if: ${{ inputs.version == '' }}
      run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}


  release:
    name: Release ${{ inputs.version != '' && inputs.version || '' }}
    if: ${{ inputs.version != '' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - run: npm run build
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Release
        id: release
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          VERSION=`npm version ${{ github.event.inputs.version }}`
          VERSION=${VERSION:1}
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Pull Vercel Production Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Vercel in Production
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Push Tag
        run: git push --tags
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: v${{ steps.release.outputs.VERSION }}
